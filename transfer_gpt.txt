import io
from pathlib import Path
import yaml
import pandas as pd

def variants_params_to_df(source, *, expand_ranges=True):
    """
    Convert your YAML (file path or YAML string) to a tidy DataFrame:
    columns: variant, param, type, distribution, value, value_min, value_max
    """
    # Detect path vs YAML string safely
    is_pathlike = isinstance(source, (str, Path)) and isinstance(source, str) and ("\n" not in source)
    if is_pathlike and Path(str(source)).exists():
        with open(source, "r", encoding="utf-8") as f:
            docs = list(yaml.safe_load_all(f))
    else:
        docs = list(yaml.safe_load_all(io.StringIO(str(source))))

    rows = []
    for doc in docs:
        if not isinstance(doc, dict):
            continue
        variants = doc.get("variants", [])
        if not isinstance(variants, list):
            continue
        for v in variants:
            vname = v.get("name")
            params = v.get("parameters", []) or []
            for p in params:
                pname = p.get("name")
                ptype = p.get("type")
                dist  = p.get("distribution")
                val   = p.get("value")
                row = {
                    "variant": vname,
                    "param": pname,
                    "type": ptype,
                    "distribution": dist,
                    "value": None,
                    "value_min": None,
                    "value_max": None,
                }
                # If value is a [min, max] numeric range, split it
                if isinstance(val, list) and expand_ranges and len(val) == 2 and all(isinstance(x, (int, float)) for x in val):
                    row["value_min"], row["value_max"] = val[0], val[1]
                else:
                    row["value"] = val
                rows.append(row)

    df = pd.DataFrame(rows)
    # Ensure numeric where appropriate
    for c in ["value_min", "value_max"]:
        if c in df.columns:
            df[c] = pd.to_numeric(df[c], errors="coerce")
    return df